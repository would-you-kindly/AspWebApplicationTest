//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebServiceClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ServiceReference1.ITestService")]
    public interface ITestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITestService/GetAllTutorials", ReplyAction="urn:ITestService/GetAllTutorialsResponse")]
        string GetAllTutorials();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITestService/GetAllTutorials", ReplyAction="urn:ITestService/GetAllTutorialsResponse")]
        System.Threading.Tasks.Task<string> GetAllTutorialsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITestService/GetTutorialByID", ReplyAction="urn:ITestService/GetTutorialByIDResponse")]
        string GetTutorialByID(string TutorialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITestService/GetTutorialByID", ReplyAction="urn:ITestService/GetTutorialByIDResponse")]
        System.Threading.Tasks.Task<string> GetTutorialByIDAsync(string TutorialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITestService/AddTutorial", ReplyAction="urn:ITestService/AddTutorialResponse")]
        void AddTutorial(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITestService/AddTutorial", ReplyAction="urn:ITestService/AddTutorialResponse")]
        System.Threading.Tasks.Task AddTutorialAsync(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITestService/DeleteTutorial", ReplyAction="urn:ITestService/DeleteTutorialResponse")]
        void DeleteTutorial(string TutorialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITestService/DeleteTutorial", ReplyAction="urn:ITestService/DeleteTutorialResponse")]
        System.Threading.Tasks.Task DeleteTutorialAsync(string TutorialId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestServiceChannel : WebServiceClient.ServiceReference1.ITestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceClient : System.ServiceModel.ClientBase<WebServiceClient.ServiceReference1.ITestService>, WebServiceClient.ServiceReference1.ITestService {
        
        public TestServiceClient() {
        }
        
        public TestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetAllTutorials() {
            return base.Channel.GetAllTutorials();
        }
        
        public System.Threading.Tasks.Task<string> GetAllTutorialsAsync() {
            return base.Channel.GetAllTutorialsAsync();
        }
        
        public string GetTutorialByID(string TutorialId) {
            return base.Channel.GetTutorialByID(TutorialId);
        }
        
        public System.Threading.Tasks.Task<string> GetTutorialByIDAsync(string TutorialId) {
            return base.Channel.GetTutorialByIDAsync(TutorialId);
        }
        
        public void AddTutorial(string str) {
            base.Channel.AddTutorial(str);
        }
        
        public System.Threading.Tasks.Task AddTutorialAsync(string str) {
            return base.Channel.AddTutorialAsync(str);
        }
        
        public void DeleteTutorial(string TutorialId) {
            base.Channel.DeleteTutorial(TutorialId);
        }
        
        public System.Threading.Tasks.Task DeleteTutorialAsync(string TutorialId) {
            return base.Channel.DeleteTutorialAsync(TutorialId);
        }
    }
}
